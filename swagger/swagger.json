{
  "info": {
    "title": "SAML Jackson API",
    "version": "1.1.5",
    "description": "This is the API documentation for SAML Jackson service.",
    "termsOfService": "https://boxyhq.com/terms.html",
    "contact": {
      "name": "Boxy HQ",
      "url": "https://boxyhq.com/",
      "email": "support@boxyhq.com"
    },
    "license": {
      "name": "Apache-2.0 License",
      "url": "https://github.com/boxyhq/jackson/blob/main/LICENSE"
    }
  },
  "host": "localhost:5225",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "swagger": "2.0",
  "paths": {
    "/api/v1/saml/connection": {
      "$ref": "#/paths/~1api~1v1~1saml~1config"
    },
    "/api/v1/saml/config": {
      "post": {
        "summary": "Create SAML connection",
        "operationId": "create-saml-connection",
        "tags": [
          "SAML Connection"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Name/identifier for the config",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "description",
            "description": "A short description for the config not more than 100 characters",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "encodedRawMetadata",
            "description": "Base64 encoding of the XML metadata",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "rawMetadata",
            "description": "Raw XML metadata",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "defaultRedirectUrl",
            "description": "The redirect URL to use in the IdP login flow",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirectUrl",
            "description": "JSON encoded array containing a list of allowed redirect URLs",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "description": "Tenant",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "description": "Product",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "example": {
                "idpMetadata": {
                  "sso": {
                    "postUrl": "https://dev-20901260.okta.com/app/dev-20901260_jacksonnext_1/xxxxxxxxxxxxx/sso/saml",
                    "redirectUrl": "https://dev-20901260.okta.com/app/dev-20901260_jacksonnext_1/xxxxxxxxxxxxx/sso/saml"
                  },
                  "entityID": "http://www.okta.com/xxxxxxxxxxxxx",
                  "thumbprint": "Eo+eUi3UM3XIMkFFtdVK3yJ5vO9f7YZdasdasdad",
                  "loginType": "idp",
                  "provider": "okta.com"
                },
                "defaultRedirectUrl": "https://hoppscotch.io/",
                "redirectUrl": [
                  "https://hoppscotch.io/"
                ],
                "tenant": "hoppscotch.io",
                "product": "API Engine",
                "name": "Hoppscotch-SP",
                "description": "SP for hoppscotch.io",
                "clientID": "Xq8AJt3yYAxmXizsCWmUBDRiVP1iTC8Y/otnvFIMitk",
                "clientSecret": "00e3e11a3426f97d8000000738300009130cd45419c5943",
                "certs": {
                  "publicKey": "-----BEGIN CERTIFICATE-----.......-----END CERTIFICATE-----",
                  "privateKey": "-----BEGIN PRIVATE KEY-----......-----END PRIVATE KEY-----"
                }
              }
            }
          },
          "400": {
            "description": "Please provide rawMetadata or encodedRawMetadata | Please provide a defaultRedirectUrl | Please provide redirectUrl | redirectUrl is invalid | Exceeded maximum number of allowed redirect urls | defaultRedirectUrl is invalid | Please provide tenant | Please provide product | Please provide a friendly name | Description should not exceed 100 characters | Strategy&#58; xxxx not supported"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "summary": "Update SAML Connection",
        "operationId": "update-saml-connection",
        "tags": [
          "SAML Connection"
        ],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "clientID",
            "description": "Client ID for the config",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "clientSecret",
            "description": "Client Secret for the config",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "name",
            "description": "Name/identifier for the config",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "description",
            "description": "A short description for the config not more than 100 characters",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "encodedRawMetadata",
            "description": "Base64 encoding of the XML metadata",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "rawMetadata",
            "description": "Raw XML metadata",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "defaultRedirectUrl",
            "description": "The redirect URL to use in the IdP login flow",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "redirectUrl",
            "description": "JSON encoded array containing a list of allowed redirect URLs",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "tenant",
            "description": "Tenant",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "description": "Product",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Please provide clientID | Please provide clientSecret | clientSecret mismatch | Tenant/Product config mismatch with IdP metadata | Description should not exceed 100 characters| redirectUrl is invalid | Exceeded maximum number of allowed redirect urls | defaultRedirectUrl is invalid"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get SAML Connection",
        "operationId": "get-saml-connection",
        "tags": [
          "SAML Connection"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/tenantParam"
          },
          {
            "$ref": "#/parameters/productParam"
          },
          {
            "$ref": "#/parameters/clientIDParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          }
        }
      },
      "delete": {
        "summary": "Delete SAML Connection",
        "operationId": "delete-saml-connection",
        "tags": [
          "SAML Connection"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/clientID"
          },
          {
            "$ref": "#/parameters/clientSecret"
          },
          {
            "$ref": "#/parameters/tenant"
          },
          {
            "$ref": "#/parameters/product"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "clientSecret mismatch | Please provide `clientID` and `clientSecret` or `tenant` and `product`.'"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/oidc/connection": {
      "post": {
        "summary": "Create OIDC Connection",
        "operationId": "create-oidc-connection",
        "tags": [
          "OIDC Connection"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Name/identifier for the config",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "description",
            "description": "A short description for the config not more than 100 characters",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "oidcDiscoveryUrl",
            "description": "well-known URL where the OpenID Provider configuration is exposed",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "oidcClientId",
            "description": "clientId of the application set up on the OpenID Provider",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "oidcClientSecret",
            "description": "clientSecret of the application set up on the OpenID Provider",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "defaultRedirectUrl",
            "description": "The redirect URL to use in the IdP login flow",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirectUrl",
            "description": "JSON encoded array containing a list of allowed redirect URLs",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "description": "Tenant",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "description": "Product",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "example": {
                "oidcProvider": {
                  "discoveryUrl": "https://dev-xxxxx.okta.com/oauth2/yyyyyy/.well-known/openid-configuration",
                  "clientId": "xxxxxxyyyyyyxxxxxx",
                  "clientSecret": "zzzzzzzzzzzzzzzz"
                },
                "defaultRedirectUrl": "https://hoppscotch.io/",
                "redirectUrl": [
                  "https://hoppscotch.io/"
                ],
                "tenant": "hoppscotch.io",
                "product": "API Engine",
                "name": "Hoppscotch-SP",
                "description": "SP for hoppscotch.io",
                "clientID": "Xq8AJt3yYAxmXizsCWmUBDRiVP1iTC8Y/otnvFIMitk",
                "clientSecret": "00e3e11a3426f97d8000000738300009130cd45419c5943"
              }
            }
          },
          "400": {
            "description": "Please provide a defaultRedirectUrl | Please provide redirectUrl | redirectUrl is invalid | Exceeded maximum number of allowed redirect urls | defaultRedirectUrl is invalid | Please provide tenant | Please provide product | Please provide a friendly name | Description should not exceed 100 characters | Please provide the clientId from OpenID Provider | Please provide the clientSecret from OpenID Provider | Please provide the discoveryUrl for the OpenID Provider"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "summary": "Update OIDC Connection",
        "operationId": "update-oidc-connection",
        "tags": [
          "OIDC Connection"
        ],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "clientID",
            "description": "Client ID for the config",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "clientSecret",
            "description": "Client Secret for the config",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "name",
            "description": "Name/identifier for the config",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "description",
            "description": "A short description for the config not more than 100 characters",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "oidcDiscoveryUrl",
            "description": "well-known URL where the OpenID Provider configuration is exposed",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "oidcClientId",
            "description": "clientId of the application set up on the OpenID Provider",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "oidcClientSecret",
            "description": "clientSecret of the application set up on the OpenID Provider",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "defaultRedirectUrl",
            "description": "The redirect URL to use in the IdP login flow",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "redirectUrl",
            "description": "JSON encoded array containing a list of allowed redirect URLs",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "tenant",
            "description": "Tenant",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "description": "Product",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Please provide clientID | Please provide clientSecret | clientSecret mismatch | Description should not exceed 100 characters | redirectUrl is invalid | Please provide tenant | Please provide product | Exceeded maximum number of allowed redirect urls | defaultRedirectUrl is invalid | Tenant/Product config mismatch with OIDC Provider metadata"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get OIDC Connection",
        "parameters": [
          {
            "$ref": "#/parameters/tenantParam"
          },
          {
            "$ref": "#/parameters/productParam"
          },
          {
            "$ref": "#/parameters/clientIDParam"
          }
        ],
        "operationId": "get-oidc-connection",
        "tags": [
          "OIDC Connection"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/clientID"
          },
          {
            "$ref": "#/parameters/clientSecret"
          },
          {
            "$ref": "#/parameters/tenant"
          },
          {
            "$ref": "#/parameters/product"
          }
        ],
        "summary": "Delete OIDC Connection",
        "operationId": "delete-oidc-connection",
        "tags": [
          "OIDC Connection"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "clientSecret mismatch | Please provide `clientID` and `clientSecret` or `tenant` and `product`.'"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Code exchange",
        "operationId": "oauth-code-exchange",
        "tags": [
          "OAuth"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "grant_type",
            "in": "formData",
            "type": "string",
            "description": "Grant type should be 'authorization_code'",
            "default": "authorization_code",
            "required": true
          },
          {
            "name": "client_id",
            "in": "formData",
            "type": "string",
            "description": "Use the client_id returned by the SAML config API",
            "required": true
          },
          {
            "name": "client_secret",
            "in": "formData",
            "type": "string",
            "description": "Use the client_secret returned by the SAML config API",
            "required": true
          },
          {
            "name": "redirect_uri",
            "in": "formData",
            "type": "string",
            "description": "Redirect URI",
            "required": true
          },
          {
            "name": "code",
            "in": "formData",
            "type": "string",
            "description": "Code",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "token_type": {
                  "type": "string"
                },
                "expires_in": {
                  "type": "string"
                }
              },
              "example": {
                "access_token": "8958e13053832b5af58fdf2ee83f35f5d013dc74",
                "token_type": "bearer",
                "expires_in": 300
              }
            }
          }
        }
      }
    },
    "/oauth/userinfo": {
      "get": {
        "summary": "Get profile",
        "operationId": "oauth-get-profile",
        "tags": [
          "OAuth"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                }
              },
              "example": {
                "id": "32b5af58fdf",
                "email": "jackson@coolstartup.com",
                "firstName": "SAML",
                "lastName": "Jackson"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "responses": {
    "200": {
      "description": "Success",
      "schema": {
        "type": "object",
        "example": {
          "idpMetadata": {
            "sso": {
              "postUrl": "https://dev-20901260.okta.com/app/dev-20901260_jacksonnext_1/xxxxxxxxxxxxx/sso/saml",
              "redirectUrl": "https://dev-20901260.okta.com/app/dev-20901260_jacksonnext_1/xxxxxxxxxxxxx/sso/saml"
            },
            "entityID": "http://www.okta.com/xxxxxxxxxxxxx",
            "thumbprint": "Eo+eUi3UM3XIMkFFtdVK3yJ5vO9f7YZdasdasdad",
            "loginType": "idp",
            "provider": "okta.com"
          },
          "defaultRedirectUrl": "https://hoppscotch.io/",
          "redirectUrl": [
            "https://hoppscotch.io/"
          ],
          "tenant": "hoppscotch.io",
          "product": "API Engine",
          "name": "Hoppscotch-SP",
          "description": "SP for hoppscotch.io",
          "clientID": "Xq8AJt3yYAxmXizsCWmUBDRiVP1iTC8Y/otnvFIMitk",
          "clientSecret": "00e3e11a3426f97d8000000738300009130cd45419c5943",
          "certs": {
            "publicKey": "-----BEGIN CERTIFICATE-----.......-----END CERTIFICATE-----",
            "privateKey": "-----BEGIN PRIVATE KEY-----......-----END PRIVATE KEY-----"
          }
        }
      }
    },
    "400": {
      "description": "Please provide `clientID` or `tenant` and `product`."
    },
    "401": {
      "description": "Unauthorized"
    }
  },
  "parameters": {
    "tenantParam": {
      "in": "query",
      "name": "tenant",
      "type": "string",
      "description": "Tenant"
    },
    "productParam": {
      "in": "query",
      "name": "product",
      "type": "string",
      "description": "Product"
    },
    "clientIDParam": {
      "in": "query",
      "name": "clientID",
      "type": "string",
      "description": "Client ID"
    },
    "clientID": {
      "name": "clientID",
      "in": "formData",
      "type": "string",
      "description": "Client ID"
    },
    "clientSecret": {
      "name": "clientSecret",
      "in": "formData",
      "type": "string",
      "description": "Client Secret"
    },
    "tenant": {
      "name": "tenant",
      "in": "formData",
      "type": "string",
      "description": "Tenant"
    },
    "product": {
      "name": "product",
      "in": "formData",
      "type": "string",
      "description": "Product"
    }
  },
  "tags": []
}